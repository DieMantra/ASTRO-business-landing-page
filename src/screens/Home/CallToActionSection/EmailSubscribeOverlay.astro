<script>
	const subscribeButton = document.getElementById(
		'subscribeButton'
	) as HTMLButtonElement;
	const wrapper = document.getElementById(
		'subscribedWrapper'
	) as HTMLButtonElement;
	const body = document.querySelector('body') as unknown as HTMLBodyElement;
	const loader = document.querySelector('#subscribeLoader') as HTMLDivElement;
	const closeModalButton = document.querySelector(
		'.closeModal-btn'
	) as HTMLButtonElement;
	const subscribeHeading = document.querySelector(
		'#subscribeLoadingHeader'
	) as HTMLHeadingElement;
	const card = document.querySelector('#subscribeCard') as HTMLDivElement;

	let isOpen: boolean = false;
	let isLoading: boolean;
	wrapper.addEventListener('click', (e) => {
		if (isLoading) return;
		else closeModal();
	});

	subscribeButton.addEventListener('click', (e) => {
		if (!isOpen) {
			openModal();
			triggerTimer();
		}
	});

	function startLoading() {
		isLoading = true;
		loader.classList.add('active');
		subscribeHeading.innerText = 'Loading...';
		closeModalButton.style.display = 'none';
	}

	function stopLoader() {
		isLoading = false;
		loader.classList.remove('active');
		subscribeHeading.innerText = 'Subscribed!';
		closeModalButton.style.display = '';
		card.style.backgroundColor = 'rgba(var(--blue-accent))';
	}

	function triggerTimer() {
		startLoading();
		setTimeout(() => {
			stopLoader();
		}, 2000);
	}

	function openModal() {
		wrapper.style.display = 'flex';
		body.style.overflow = 'hidden';
		isOpen = true;
	}
	function closeModal() {
		wrapper.style.display = 'none';
		body.style.overflow = '';
		isOpen = false;
	}
</script>

<div class='wrapper' id='subscribedWrapper'>
	<div class='card' id='subscribeCard'>
		<button class='closeModal-btn'>
			<svg viewBox='0 0 12 12' version='1.1' xmlns='http://www.w3.org/2000/svg'>
				<line x1='1' y1='11' x2='11' y2='1' stroke-width='2'></line>
				<line x1='1' y1='1' x2='11' y2='11' stroke-width='2'></line>
			</svg>
		</button>
		<div class='loader' id='subscribeLoader'>
			<!-- By Sam Herbert (@sherb), for everyone. More @ http://goo.gl/7AJzbL -->
			<svg viewBox='0 0 58 58' xmlns='http://www.w3.org/2000/svg'>
				<g fill='none' fill-rule='evenodd'>
					<g transform='translate(2 1)' stroke='#000' stroke-width='1.5'>
						<circle cx='42.601' cy='11.462' r='5' fill-opacity='1' fill='#124'>
							<animate
								attributeName='fill-opacity'
								begin='0s'
								dur='1.3s'
								values='1;0;0;0;0;0;0;0'
								calcMode='linear'
								repeatCount='indefinite'
							>
							</animate>
						</circle>
						<circle cx='49.063' cy='27.063' r='5' fill-opacity='0' fill='#124'>
							<animate
								attributeName='fill-opacity'
								begin='0s'
								dur='1.3s'
								values='0;1;0;0;0;0;0;0'
								calcMode='linear'
								repeatCount='indefinite'
							>
							</animate>
						</circle>
						<circle cx='42.601' cy='42.663' r='5' fill-opacity='0' fill='#124'>
							<animate
								attributeName='fill-opacity'
								begin='0s'
								dur='1.3s'
								values='0;0;1;0;0;0;0;0'
								calcMode='linear'
								repeatCount='indefinite'
							>
							</animate>
						</circle>
						<circle cx='27' cy='49.125' r='5' fill-opacity='0' fill='#124'>
							<animate
								attributeName='fill-opacity'
								begin='0s'
								dur='1.3s'
								values='0;0;0;1;0;0;0;0'
								calcMode='linear'
								repeatCount='indefinite'
							>
							</animate>
						</circle>
						<circle cx='11.399' cy='42.663' r='5' fill-opacity='0' fill='#124'>
							<animate
								attributeName='fill-opacity'
								begin='0s'
								dur='1.3s'
								values='0;0;0;0;1;0;0;0'
								calcMode='linear'
								repeatCount='indefinite'
							>
							</animate>
						</circle>
						<circle cx='4.938' cy='27.063' r='5' fill-opacity='0' fill='#124'>
							<animate
								attributeName='fill-opacity'
								begin='0s'
								dur='1.3s'
								values='0;0;0;0;0;1;0;0'
								calcMode='linear'
								repeatCount='indefinite'
							>
							</animate>
						</circle>
						<circle cx='11.399' cy='11.462' r='5' fill-opacity='0' fill='#124'>
							<animate
								attributeName='fill-opacity'
								begin='0s'
								dur='1.3s'
								values='0;0;0;0;0;0;1;0'
								calcMode='linear'
								repeatCount='indefinite'
							>
							</animate>
						</circle>
						<circle cx='27' cy='5' r='5' fill-opacity='0' fill='#124'>
							<animate
								attributeName='fill-opacity'
								begin='0s'
								dur='1.3s'
								values='0;0;0;0;0;0;0;1'
								calcMode='linear'
								repeatCount='indefinite'
							>
							</animate>
						</circle>
					</g>
				</g>
			</svg>
		</div>
		<div class='heading'>
			<h1 id='subscribeLoadingHeader'></h1>
		</div>
		<div>
			<p>
				This is just a mock email subscriber to demonstrate state management...
			</p>
		</div>
	</div>
</div>

<style lang='scss'>
	@use 'src/sass/mixins' as m;

	.closeModal-btn {
		position: absolute;
		top: 0;
		right: 0;
		margin: 2rem;
		height: 2rem;
		width: 2rem;

		& svg {
			stroke: rgba(var(--black));
			transition: all 0.2s ease;

			@include m.hasHover {
				stroke: rgba(var(--blue-dark));
				scale: 1.1;
			}
		}
	}
	.wrapper {
		z-index: 9999;
		display: none;
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 100vh;
		backdrop-filter: blur(5px);

		align-items: center;
		justify-content: center;
		--opacity: 0.2;
		background: linear-gradient(
			-45deg,
			rgba(238, 118, 82, var(--opacity)),
			rgba(231, 60, 126, var(--opacity)),
			rgba(35, 166, 213, var(--opacity)),
			rgba(35, 213, 171, var(--opacity))
		);
		background-size: 400% 400%;
		animation: gradient 15s ease infinite;
		height: 100vh;

		@keyframes gradient {
			0% {
				background-position: 0% 50%;
			}
			50% {
				background-position: 100% 50%;
			}
			100% {
				background-position: 0% 50%;
			}
		}
	}

	.card {
		display: grid;
		grid-template-columns: 1fr;
		grid-template-rows: 2fr 2fr 1fr;
		align-items: stretch;
		justify-items: center;
		width: 50%;
		height: 50%;
		background-color: rgba(var(--white), 0.9);
		backdrop-filter: blur(15px);
		border-radius: 15px;
		outline: 2px solid rgba(29, 42, 84, 0.1);
		box-shadow: var(--shadow-card-1);
		text-align: center;
		transition: background-color 1s;

		& p {
			font-size: 1.4rem;
			padding-inline: 1rem;
		}

		@media screen and (width < 900px) {
			width: 80%;
			height: 80%;
		}
	}

	.loader {
		--size: 5rem;
		grid-row: 0 / 1;
		align-self: center;
		margin: 2rem;

		height: var(--size);
		width: var(--size);

		transition: opacity 0.2s ease;
		opacity: 0;

		&.active {
			display: block;
			opacity: 1;
		}

		& svg {
			height: var(--size);
			width: var(--size);
		}
	}

	.heading {
		font-size: 2rem;
	}
</style>
